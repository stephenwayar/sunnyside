[{"/Users/stephenwayar/Desktop/ME/CODE/Repos/SunnysideLandingPage/src/index.js":"1","/Users/stephenwayar/Desktop/ME/CODE/Repos/SunnysideLandingPage/src/App.js":"2","/Users/stephenwayar/Desktop/ME/CODE/Repos/SunnysideLandingPage/src/components/toggle/toggle.component.jsx":"3","/Users/stephenwayar/Desktop/ME/CODE/Repos/SunnysideLandingPage/src/components/navbar/navbar.component.jsx":"4","/Users/stephenwayar/Desktop/ME/CODE/Repos/SunnysideLandingPage/src/components/navItems/navitems.component.jsx":"5"},{"size":140,"mtime":1636649744962,"results":"6","hashOfConfig":"7"},{"size":713,"mtime":1636721103323,"results":"8","hashOfConfig":"7"},{"size":1168,"mtime":1636706671989,"results":"9","hashOfConfig":"7"},{"size":600,"mtime":1636715078209,"results":"10","hashOfConfig":"7"},{"size":553,"mtime":1636712584876,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"55nqnn",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"/Users/stephenwayar/Desktop/ME/CODE/Repos/SunnysideLandingPage/src/index.js",[],["25","26"],"/Users/stephenwayar/Desktop/ME/CODE/Repos/SunnysideLandingPage/src/App.js",[],"/Users/stephenwayar/Desktop/ME/CODE/Repos/SunnysideLandingPage/src/components/toggle/toggle.component.jsx",["27","28","29"],"import React, {useState} from \"react\";\nimport toggleIcon from \"../../assests/images/icon-hamburger.svg\"\nimport \"./toggle.component.css\"\n\nconst Toggle = () => {\n\n  const [toggle, setToggle] =  useState(false)\n\n  const handleClick = () => {\n    setToggle(!toggle)\n    console.log(toggle);\n  }\n\n  if(toggle === true){\n    return(\n      <div>\n        <div>\n          <img onClick={handleClick} src={toggleIcon} alt=\"toggle icon\"/>\n        </div>\n\n        <div className=\"bg-white toggleDiv shadow-2xl rounded-sm text-center text-xl sm:text-2xl text-gray-600\">\n          <p className=\"py-3  pt-16 hover:text-gray-900\"><a href=\"#\">About</a></p>\n          <p className=\"py-3 sm:py-4 hover:text-gray-900\"><a href=\"#\">Services</a></p>\n          <p className=\"py-3 sm:py-4 hover:text-gray-900\"><a href=\"#\">Projects</a></p>\n          <p className=\"py-3 sm:py-4\"><button className=\"text-sm text-gray-900 hover:text-gray-700 bg-yellow-300 hover:bg-yellow-200 font-bold py-3 rounded-full px-7\">CONTACT</button></p>\n        </div>\n      </div>\n    )\n  }\n\n  return(\n    <div>\n      <img onClick={handleClick} src={toggleIcon} alt=\"toggle icon\"/>\n    </div>\n  )\n}\nexport default Toggle","/Users/stephenwayar/Desktop/ME/CODE/Repos/SunnysideLandingPage/src/components/navbar/navbar.component.jsx",[],"/Users/stephenwayar/Desktop/ME/CODE/Repos/SunnysideLandingPage/src/components/navItems/navitems.component.jsx",["30","31","32"],"import React from \"react\";\n\nconst NavItems = () => {\n  return(\n    <div>\n      <a className=\"text-white hover:text-gray-700 lg:px-6 px-4\" href=\"#\">About</a>\n      <a className=\"text-white hover:text-gray-700 lg:px-6 px-4\" href=\"#\">Services</a>\n      <a className=\"text-white hover:text-gray-700 lg:px-6 px-4\" href=\"#\">Projects</a>\n      <button className=\"text-sm text-gray-700 lg:px-7  lg:mr-4 hover:bg-opacity-25 bg-white hover:text-white font-bold py-3 rounded-full px-8 md:px-4 l md:py-2\">CONTACT</button> \n    </div>\n  )\n}  \nexport default NavItems",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":22,"column":58,"nodeType":"39","endLine":22,"endColumn":70},{"ruleId":"37","severity":1,"message":"38","line":23,"column":59,"nodeType":"39","endLine":23,"endColumn":71},{"ruleId":"37","severity":1,"message":"38","line":24,"column":59,"nodeType":"39","endLine":24,"endColumn":71},{"ruleId":"37","severity":1,"message":"38","line":6,"column":7,"nodeType":"39","endLine":6,"endColumn":75},{"ruleId":"37","severity":1,"message":"38","line":7,"column":7,"nodeType":"39","endLine":7,"endColumn":75},{"ruleId":"37","severity":1,"message":"38","line":8,"column":7,"nodeType":"39","endLine":8,"endColumn":75},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]